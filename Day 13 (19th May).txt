Day 13
19th of May 2025

if else
--------
syntax:
if(condition)
	//body of statement;
else
	//body of statement;

Example: Enter your age and verify whether you are eligible or not for voting in the election

#include <stdio.h>
int main() {
	int age;
	 printf("Enter your age:");		
	 scanf("%d", &age); 
	
	if(age > 18)
		printf("You're Eligible\n") ;
	else
		printf("You're not Eligible\n");
}

Output:
[2021ict71@fedora ~]$ ./voting
Enter your age:16
You're not Eligible
[2021ict71@fedora ~]$ ./voting
Enter your age:21
You're Eligible


Ternary Operator
----------------
syntax:
test_condition ? exp1 : exp2;

#include <stdio.h>
int main() {
	int age;
	 printf("Enter your age:");		
	 scanf("%d", &age); 
	
	age > 18 ? printf("You're Eligible\n"):printf("You're not Eligible\n");
	return 0;
}



[2021ict71@fedora ~]$ ./ternaryvoting
Enter your age:12
You're not Eligible
[2021ict71@fedora ~]$ ./ternaryvoting
Enter your age:54


Switch
------
syntax:
switch (expression) {
  case x:
    // code block
    break;
  case y:
    // code block
    break;
  default:
    // code block
}

example 1:
Enter any number from 1 to 7 and output its corresponding day of the week 
#include <stdio.h>
int main() {
	
	int dayNum;
	printf("Enter the number of the day(1-7): ");
	scanf("%i",&dayNum);
	switch(dayNum){
		case 1:
		printf("Monday\n");
		break;	
		case 2:
        printf("Tuesday\n");
        break;
		case 3:
        printf("Wednesday\n");
        break;		
		case 4:
        printf("Thursday\n");
        break;
		case 5:
        printf("Friday\n");
        break;
		case 6:
        printf("Saturday\n");
        break;
		case 7:
        printf("Sunday\n");
        break;
		default:
		printf("Invalid number!\n");
	}
	return 0;
}


[2021ict71@fedora ~]$ ./switchDay
Enter the number of the day(1-7): 4
Thursday


example 2:
Write a code for small astrology based on your life path number

Date: 23
calculation of life path number:
		a=date%10;
		b=date/10;
		c=a+b;
	if life path number:
		1. Lucky
		2. carefully do your work
		3. Stronger
		4. Happy
		5. Can get Help
		6. Doubt 
		7. Sad
		8. Like
		9. Courage


#include <stdio.h>
int main() {
	
	int num;
	printf("Enter a number(1-9): ");
	scanf("%i",&num);
	int a=num%10;
	int b=num/10;
	int c=a+b;
	switch(c){
		case 1:
		printf("Lucky\n");
		break;	
		case 2:
        printf("carefully do your work\n");
        break;
		case 3:
        printf("Stronger\n");
        break;		
		case 4:
        printf("Happy\n");
        break;
		case 5:
        printf("Can get Help\n");
        break;
		case 6:
        printf("Doubt\n");
        break;
		case 7:
        printf("Sad\n");
        break;
		case 8:
        printf("Like\n");
        break;
		case 9:
        printf("Courage\n");
        break;
		default:
		printf("Invalid number!\n");
	}
	return 0;
}



[2021ict71@fedora ~]$ ./LifePathNumber
Enter a number(1-9): 5
Can get Help

Example 3:
give list of numbers then calculate the sumamtion and product of them
 
1 2 3 4 5
summation: 15
product: 120


Output:
{ ~ }  » ./sumproduct                                                                         ~ 2
Enter the number of elements: 3
Enter 3 numbers:
1
2
5
Summation: 8
Product: 10


while loop
----------
while (condition) {
  // code block to be executed
}

Example 4:
Print the integers 1-10 using while loop

Output:
{ ~ }  » ./while                                                                              ~ 1
1 2 3 4 5 6 7 8 9 10 


Example 5:
Write a C program to generate and print the Fibonacci Series upto a specified number of terms. 
The program should take the number of terms as inout from the user and then display the 
corresponding Fibonacci sequence

#include <stdio.h>

int main() {
    int num, a = 0, b = 1, i, next;

    printf("Enter the number of terms for the Fibonacci series: ");
    scanf("%d", &num);

    if (num <= 0) {
        printf("Please enter a positive number.\n");
    } else if (num == 1) {
        printf("Fibonacci Series: %d\n", a);
    } else {
        printf("Fibonacci Series: %d, %d", a, b);
        for (i = 3; i <= num; i++) {
            next = a + b;
            printf(", %d", next);
            a = b;
            b = next;
        }
        printf("\n");
    }

    return 0;
}


Output:
{ ~ }  » ./FiboC                                                                                ~
Enter the number of terms for the Fibonacci series: 5
Fibonacci Series: 0, 1, 1, 2, 3
{ ~ }  » 


Example 6:
Write a C program to calculate the factorial of a given non-negative number

#include <stdio.h>
int main(){
	int fact = 1;
	int n;
	printf("Enter a number to find factorial: ")
	scanf("%d",&n);
	
	for(int i=1; i<=n; i++)
	{
		fact*=i;
	}
	printf("Factorial of %d is %d\n",n,fact);
}

Output:
{ ~ }  » ./FactC                                                                                ~
Enter a number to find factorial: 4
Factorial of 4 is 24
{ ~ }  » 

Example 7:
Accept two strings from the user concatenate it and display the results

#include <stdio.h>
#include <string.h>
int main(){
	char str1[100];
	char str2[100];
	printf("Enter string 1: ")
	scanf("%s",str1);	
	printf("Enter string 2: ")
	scanf("%s",str2);
	strcat(str1, str2);
	
	printf("Concatenated String: ")
}

Output:
{ ~ }  » ./stringcat                                                                         ~ 30
Enter string 1: Ele
Enter string 2: phant
Concatenated String: Elephant


Example 8:
Write a C program that takes a binary number (as an integer) as input and 
converts it to its decimal equivalent.

#include <stdio.h>

int main() {
    int binaryNumber, decimalNumber = 0, base = 1, remainder;

    printf("Enter a binary number: ");
    scanf("%d", &binaryNumber);

    while (binaryNumber > 0) {
        remainder = binaryNumber % 10;
        decimalNumber = decimalNumber + remainder * base;
        binaryNumber = binaryNumber / 10;
        base = base * 2;
    }

    printf("Decimal equivalent: %d\n", decimalNumber);

    return 0;
}

Output:
Enter a binary number: 1010
Decimal equivalent: 10
{ ~ }  » ./decimalToBinary                                                                      ~
Enter a binary number: 1001
Decimal equivalent: 9


Example 9:
Write a C program that:
Accepts an array of integers from the user.
Finds and displays the maximum and minimum values in the array.


#include <stdio.h>

int main() {
    int size;

    printf("Enter the size of the array: ");
    scanf("%d", &size);

    int arr[size];
    int i, max, min;

    printf("Enter %d elements:\n", size);
    for (i = 0; i < size; i++) {
        scanf("%d", &arr[i]);
    }

    max = min = arr[0];

    for (i = 1; i < size; i++) {
        if (arr[i] > max)
            max = arr[i];
        if (arr[i] < min)
            min = arr[i];
    }

    printf("Maximum value: %d\n", max);
    printf("Minimum value: %d\n", min);

    return 0;
}

Output:
Enter the size of the array: 5
Enter 5 elements:
1
2
3
4
5
Maximum value: 5
Minimum value: 1

Example 10:
C program to generate Pascal's Triangle.

Output:
no of rows =5
          1
        1   1
      1   2   1
    1   3   3   1
  1   4   6   4   1



#include <stdio.h>

int main() {
    int rows, i, j, space, num;

    printf("Enter the number of rows for Pascal's Triangle: ");
    scanf("%d", &rows);

    for (i = 0; i < rows; i++) {
        // Print spaces
        for (space = 1; space <= rows - i; space++) {
            printf("  ");
        }

        num = 1;
        for (j = 0; j <= i; j++) {
            printf("%4d", num);
            num = num * (i - j) / (j + 1);
        }
        printf("\n");
    }

    return 0;
}



Output:
{ ~ }  » ./PascalTriangle                                                                     ~ 1
Enter the number of rows for Pascal's Triangle: 5
             1
           1   1
         1   2   1
       1   3   3   1
     1   4   6   4   1




